name: "Infrastructure-Level Enforcement"
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  security-events: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: "Security Scanning"
        run: |
          if git log --oneline -S "sk_" -S "pk_" -S "api_key" --since="1 hour ago"; then
            echo "‚ùå SECURITY VIOLATION: Potential secrets in recent commits"
            exit 1
          fi

          if grep -r "eval\|innerHTML\|document.write" src/ 2>/dev/null; then
            echo "‚ùå SECURITY VIOLATION: Dangerous code patterns detected"
            exit 1
          fi

          echo "‚úÖ Security scanning passed"

      - name: "Install Dependencies"
        run: npm ci

      - name: "Code Quality Gate"
        run: |
          npm run lint || {
            echo "‚ùå CODE QUALITY GATE FAILED"
            exit 1
          }

          echo "‚úÖ Code quality checks passed"

      - name: "Build Verification"
        run: |
          npm run build || {
            echo "‚ùå BUILD GATE FAILED - Code cannot be deployed"
            exit 1
          }

          echo "‚úÖ Build verification passed"

      - name: "Dependency Vulnerability Check"
        run: |
          npm audit --audit-level=high || {
            echo "‚ùå SECURITY GATE FAILED: High-severity vulnerabilities found"
            exit 1
          }

          echo "‚úÖ Dependency security check passed"

  enforce-standards:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: "Install Dependencies"
        run: npm ci

      - name: "Enforce ESLint Standards"
        run: |
          echo "üîç Running ESLint..."
          npm run lint || {
            echo "‚ùå ESLint validation failed"
            exit 1
          }

      - name: "Enforce TODO Standards"
        run: |
          echo "üîç Validating TODO/FIX comments..."
          find . -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | \
          grep -v node_modules | \
          xargs node scripts/check-todos.js || {
            echo "‚ùå TODO validation failed"
            exit 1
          }

          echo "‚úÖ TODO/FIX standards enforced"

  codeql:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: "CodeQL Security Analysis"
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      - name: "Run CodeQL Analysis"
        uses: github/codeql-action/analyze@v3
