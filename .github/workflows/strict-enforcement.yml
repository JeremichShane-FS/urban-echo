name: "Infrastructure-Level Enforcement"
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  security-events: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: "Security Scanning"
        run: |

          # Check for stripe secret keys
          # This regex checks for sk_ followed by at least 20 alphanumeric characters
          if grep -r "sk_[a-zA-Z0-9]\{20,\}" src/ 2>/dev/null; then
            echo "‚ùå SECURITY VIOLATION: Stripe secret key found in source code"
            exit 1
          fi

          # Check for public API keys
          # This regex checks for pk_ followed by at least 20 alphanumeric characters
          if grep -r "pk_[a-zA-Z0-9]\{20,\}" src/ 2>/dev/null; then
            echo "‚ùå SECURITY VIOLATION: API public key found in source code"
            exit 1
          fi

          # Check for three dangerous patterns, eval(), innerHTML assignment, and document.write()
          # These patterns can lead to XSS vulnerabilities or code injection
          if grep -rE "\beval\s*\(|innerHTML\s*=|document\.write\s*\(" src/ 2>/dev/null; then
            echo "‚ùå SECURITY VIOLATION: Dangerous code patterns detected"
            exit 1
          fi

          echo "‚úÖ Security scanning passed"

      - name: "Install Dependencies"
        run: npm ci

      - name: "Code Quality Gate"
        run: |
          npm run lint || {
            echo "‚ùå CODE QUALITY GATE FAILED"
            exit 1
          }

          echo "‚úÖ Code quality checks passed"

      - name: "Build Verification"
        run: |
          npm run build || {
            echo "‚ùå BUILD GATE FAILED - Code cannot be deployed"
            exit 1
          }

          echo "‚úÖ Build verification passed"
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      # Prevents deployment with dependencies that have known high-severity vulnerabilities
      # npm audit finds high-severity vulnerabilities and fails the job if any are found
      - name: "Dependency Vulnerability Check"
        run: |
          npm audit --audit-level=high || {
            echo "‚ùå SECURITY GATE FAILED: High-severity vulnerabilities found"
            exit 1
          }

          echo "‚úÖ Dependency security check passed"

  enforce-standards:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: "Install Dependencies"
        run: npm ci

      - name: "Enforce TODO Standards"
        run: |

          # Run my check-todos.js script to check and validate TODO/FIX comments
          echo "üîç Validating TODO/FIX comments..."
          find . -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | \
          grep -v node_modules | \
          xargs node scripts/check-todos.js || {
            echo "‚ùå TODO validation failed"
            exit 1
          }

          echo "‚úÖ TODO/FIX standards enforced"
