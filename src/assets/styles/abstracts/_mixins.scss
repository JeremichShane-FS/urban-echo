@use "breakpoints" as *;
@use "functions" as *;

// Breakpoint Mixins
@mixin breakpoint($key) {
  $breakpoint: getBreakpoint($key);

  @if $breakpoint != null {
    @media (min-width: #{$breakpoint}) {
      @content;
    }
  } @else {
    @warn "Cannot generate media query for invalid breakpoint: #{$key}";
  }
}

@mixin respond-to($key) {
  @include breakpoint($key) {
    @content;
  }
}

// Typography Mixins
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin multi-line-truncate($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// _mixins.scss - Add this to your utilities directory

/**
 * Base button mixin with customizable properties
 * @param {Color} $bg-color - Background color
 * @param {Color} $text-color - Text color
 * @param {Color} $hover-bg - Hover background color
 * @param {Color} $border-color - Border color (optional)
 * @param {String} $border-width - Border width (default: 2px)
 * @param {String} $padding-y - Vertical padding (default: var(--spacing-md))
 * @param {String} $padding-x - Horizontal padding (default: var(--spacing-xl))
 * @param {String} $font-size - Font size (default: var(--font-size-md))
 * @param {String} $border-radius - Border radius (default: var(--border-radius-md))
 * @param {Boolean} $has-shadow - Whether to include hover shadow (default: true)
 * @param {Color} $shadow-color - Shadow color for hover effect
 */
@mixin button-base(
  $bg-color: var(--color-button-accent-bg),
  $text-color: var(--color-button-accent-text),
  $hover-bg: var(--color-button-accent-hover-bg),
  $border-color: null,
  $border-width: 2px,
  $padding-y: var(--spacing-md),
  $padding-x: var(--spacing-xl),
  $font-size: var(--font-size-md),
  $border-radius: var(--border-radius-md),
  $has-shadow: true,
  $shadow-color: var(--color-accent)
) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: $bg-color;
  color: $text-color;
  padding: $padding-y $padding-x;
  border-radius: $border-radius;
  text-decoration: none;
  font-weight: var(--font-weight-semibold);
  font-size: $font-size;
  transition: all 0.3s ease;
  width: fit-content;
  cursor: pointer;

  // Conditional border
  @if $border-color {
    border: $border-width solid $border-color;
  } @else {
    border: none;
  }

  @include breakpoint(md) {
    align-self: center;
  }

  &:hover {
    background-color: $hover-bg;
    transform: translateY(-2px);

    @if $has-shadow and $shadow-color {
      box-shadow: 0 4px 12px color-alpha($shadow-color, 0.3);
    }
  }

  &:active {
    transform: translateY(0);
  }

  &:focus-visible {
    outline: 2px solid $shadow-color;
    outline-offset: 2px;
  }
}

/**
 * Predefined button variants for common use cases
 */

// Primary button (accent colors)
@mixin button-primary() {
  @include button-base(
    $bg-color: var(--color-button-accent-bg),
    $text-color: var(--color-button-accent-text),
    $hover-bg: var(--color-button-accent-hover-bg),
    $border-color: var(--color-accent),
    $shadow-color: var(--color-accent)
  );
}

// Secondary button (outlined)
@mixin button-secondary() {
  @include button-base(
    $bg-color: transparent,
    $text-color: var(--color-accent),
    $hover-bg: var(--color-accent),
    $border-color: var(--color-accent),
    $shadow-color: var(--color-accent)
  );

  &:hover {
    color: var(--color-button-accent-text);
  }
}

// Ghost button (minimal)
@mixin button-ghost() {
  @include button-base(
    $bg-color: transparent,
    $text-color: var(--color-text),
    $hover-bg: var(--color-surface-hover),
    $border-color: var(--color-border),
    $has-shadow: false
  );
}

// Danger button
@mixin button-danger() {
  @include button-base(
    $bg-color: var(--color-error),
    $text-color: white,
    $hover-bg: var(--color-error-dark),
    $border-color: var(--color-error),
    $shadow-color: var(--color-error)
  );
}

// Small button variant
@mixin button-small() {
  @include button-base(
    $padding-y: var(--spacing-sm),
    $padding-x: var(--spacing-lg),
    $font-size: var(--font-size-sm)
  );
}

// Large button variant
@mixin button-large() {
  @include button-base(
    $padding-y: var(--spacing-lg),
    $padding-x: var(--spacing-2xl),
    $font-size: var(--font-size-lg)
  );
}
